<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.depository_manage.mapper.BearingRecordMapper">

    <resultMap id="bearingRecordMap" type="com.depository_manage.entity.BearingRecord">
        <result property="id" column="id"/>
        <result property="transactionType" column="transaction_type"/>
        <result property="boxText" column="box_text"/>
        <result property="boxNumber" column="box_number"/>
        <result property="quantity" column="quantity"/>
        <result property="time" column="time"/>
        <result property="operator" column="operator"/>
        <result property="depository" column="depository"/>
        <result property="storageLocation" column="storage_location"/>
        <result property="customer" column="customer"/>
        <result property="outerInnerRing" column="outer_inner_ring"/>
        <result property="model" column="model"/>
        <result property="productCategory" column="product_category"/>
        <result property="steelType" column="steel_type"/>
        <result property="steelGrade" column="steel_grade"/>
        <result property="remarks" column="remarks"/>
        <result property="iter" column="iter"/>
        <result property="size" column="size"/>
        <result property="dissolve" column="dissolve"/>
        <result property="pair" column="pair"/>
    </resultMap>

    <insert id="insertBearingRecord">
        INSERT INTO bearing_records
        (transaction_type, box_text, box_number, quantity, time, operator, depository, storage_location, customer, outer_inner_ring, model, product_category, steel_type, steel_grade, remarks, iter, size, dissolve, pair)
        VALUES
            (#{transactionType}, #{boxText}, #{boxNumber}, #{quantity}, #{time}, #{operator}, #{depository}, #{storageLocation}, #{customer}, #{outerInnerRing}, #{model}, #{productCategory}, #{steelType}, #{steelGrade}, #{remarks}, #{iter}, #{size}, #{dissolve}, #{pair})
    </insert>
    <update id="updateBearingRecord">
        UPDATE bearing_records
        <set>
            <if test="transactionType != null">
                transaction_type = #{transactionType},
            </if>
            <if test="boxText != null">
                box_text = #{boxText},
            </if>
            <if test="boxNumber != null">
                box_number = #{boxNumber},
            </if>
            <if test="quantity != null">
                quantity = #{quantity},
            </if>
            <if test="time != null">
                time = #{time},
            </if>
            <if test="operator != null">
                operator = #{operator},
            </if>
            <if test="depository != null">
                depository = #{depository},
            </if>
            <if test="storageLocation != null">
                storage_location = #{storageLocation},
            </if>
            <if test="customer != null">
                customer = #{customer},
            </if>
            <if test="outerInnerRing != null">
                outer_inner_ring = #{outerInnerRing},
            </if>
            <if test="model != null">
                model = #{model},
            </if>
            <if test="productCategory != null">
                product_category = #{productCategory},
            </if>
            <if test="steelType != null">
                steel_type = #{steelType},
            </if>
            <if test="steelGrade != null">
                steel_grade = #{steelGrade},
            </if>
            <if test="remarks != null">
                remarks = #{remarks},
            </if>
            <if test="size != null">
                size = #{size},
            </if>
            <if test="dissolve != null">
                dissolve = #{dissolve},
            </if>
            <if test="pair != null">
                pair = #{pair}
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="deleteBearingRecordById">
        DELETE FROM bearing_records WHERE id = #{id}
    </delete>

    <select id="selectBearingRecordById" resultMap="bearingRecordMap">
        SELECT * FROM bearing_records WHERE id = #{id}
    </select>

    <select id="selectAllBearingRecords" resultMap="bearingRecordMap" parameterType="map">
        SELECT * FROM bearing_records WHERE 1=1
        <if test="transactionType != null and transactionType != ''">
            AND transaction_type = #{transactionType}
        </if>
        <if test="boxText != null and boxText != ''">
            AND box_text = #{boxText}
        </if>
        <if test="boxNumber != null and boxNumber != ''">
            AND box_number = #{boxNumber}
        </if>
        <if test="model != null and model != ''">
            AND model  LIKE CONCAT('%',#{model},'%')
        </if>
        <if test="customer != null and customer != ''">
            AND customer  LIKE CONCAT('%',#{customer},'%')
        </if>
        <if test="productCategory != null and productCategory != ''">
            AND product_category = #{productCategory}
        </if>
        <if test="outerInnerRing != null and outerInnerRing != ''">
            AND outer_inner_ring = #{outerInnerRing}
        </if>
        <if test="steelType != null and steelType != ''">
            AND steel_type = #{steelType}
        </if>
        <if test="steelGrade != null and steelGrade != ''">
            AND steel_grade = #{steelGrade}
        </if>
        <if test="depository != null and depository != ''">
            AND depository = #{depository}
        </if>
        <if test="startDate != null and endDate != null">
            AND DATE(time) BETWEEN #{startDate} AND #{endDate}
        </if>
        ORDER BY id DESC
        <if test="begin != null and size != null">
            LIMIT #{begin},#{size}
        </if>
    </select>
    <select id="hasSpecialRecord" resultType="boolean">
        SELECT COUNT(*) > 0 FROM bearing_records
        WHERE box_text = #{boxText} AND box_number = #{boxNumber}
          AND depository = #{depository} AND quantity= #{quantity} AND iter = #{iter}
          AND transaction_type IN ('返库', '出库', '转入')
    </select>

    <select id="selectInventoryByCutoffDate" resultMap="bearingRecordMap" parameterType="map">
        SELECT
        br.box_text,
        br.box_number,
        br.depository,
        br.customer,
        br.product_category,
        br.outer_inner_ring,
        br.steel_type,
        br.steel_grade,
        br.model,
        br.size,
        MAX(br.dissolve) as dissolve,
        SUM(CASE
        WHEN br.transaction_type IN ('入库', '转入') THEN br.quantity
        WHEN br.transaction_type IN ('出库', '转出', '返库') THEN -br.quantity
        END) as quantity,
        lr.last_recorded_time
        FROM
        bearing_records br
        JOIN (
        SELECT
        box_text,
        box_number,
        MAX(time) as last_recorded_time
        FROM
        bearing_records
        WHERE
        transaction_type IN ('入库', '转入') AND bearing_records.time &lt;= DATE_ADD(#{cutoffDate}, INTERVAL 1 DAY)
        GROUP BY
        box_text,
        box_number
        ) lr ON br.box_text = lr.box_text AND br.box_number = lr.box_number
        WHERE
        br.quantity > 0
        <if test="cutoffDate != null">
            AND br.time &lt;= DATE_ADD(#{cutoffDate}, INTERVAL 1 DAY)
        </if>
        <if test="boxText != null and boxText != ''">
            AND br.box_text = #{boxText}
        </if>
        <if test="boxNumber != null and boxNumber != ''">
            AND br.box_number = #{boxNumber}
        </if>
        <if test="model != null and model != ''">
            AND br.model  LIKE CONCAT('%',#{model},'%')
        </if>
        <if test="customer != null and customer != ''">
            AND br.customer  LIKE CONCAT('%',#{customer},'%')
        </if>
        <if test="productCategory != null and productCategory != ''">
            AND br.product_category = #{productCategory}
        </if>
        <if test="outerInnerRing != null and outerInnerRing != ''">
            AND br.outer_inner_ring = #{outerInnerRing}
        </if>
        <if test="steelType != null and steelType != ''">
            AND br.steel_type = #{steelType}
        </if>
        <if test="steelGrade != null and steelGrade != ''">
            AND br.steel_grade = #{steelGrade}
        </if>
        <if test="depository != null and depository != ''">
            AND br.depository = #{depository}
        </if>
        GROUP BY
        br.box_text,
        br.box_number,
        br.depository,
        br.customer,
        br.product_category,
        br.outer_inner_ring,
        br.steel_type,
        br.steel_grade,
        br.quantity,
        br.model,
        br.size,
        lr.last_recorded_time
        <if test="begin != null and size != null">
            LIMIT #{begin},#{size}
        </if>
    </select>

    <select id="everyPair" resultType="map">
        WITH transaction_summary AS (
        SELECT
        b.pair,
        br.model,
        br.outer_inner_ring,
        SUM(CASE WHEN br.transaction_type = '入库' THEN br.quantity ELSE 0 END) AS 入库,
        SUM(CASE WHEN br.transaction_type = '出库' THEN br.quantity ELSE 0 END) AS 出库,
        SUM(CASE WHEN br.transaction_type = '返库' THEN br.quantity ELSE 0 END) AS 返库,
        SUM(CASE WHEN br.transaction_type = '转入' THEN br.quantity ELSE 0 END) AS 转入,
        SUM(CASE WHEN br.transaction_type = '转出' THEN br.quantity ELSE 0 END) AS 转出
        FROM
        bearing_records br
        JOIN
        bearings b ON br.box_text = b.box_text
        WHERE
            br.depository = #{depository} AND  -- 使用depository作为过滤条件
            br.time > #{StartDate} AND br.time &lt; DATE_ADD(#{EndDate},interval 1 DAY)
        GROUP BY
        b.pair, br.outer_inner_ring,br.model
        ),
        pre_start_date_inventory AS (
        SELECT
        b.pair,
        br.outer_inner_ring,
        SUM(CASE WHEN br.transaction_type IN ('入库', '转入') THEN br.quantity
        WHEN br.transaction_type IN ('出库', '返库', '转出') THEN -br.quantity
        ELSE 0 END) AS 在库
        FROM
        bearing_records br
        JOIN
        bearings b ON br.box_text = b.box_text
        WHERE
            br.depository = #{depository} AND  -- 使用depository作为过滤条件
            br.time &lt; #{StartDate}
        GROUP BY
        b.pair, br.outer_inner_ring
        ),
        inventory AS (
        SELECT
        b.pair,
        br.outer_inner_ring,
        SUM(CASE WHEN br.transaction_type IN ('入库', '转入') THEN br.quantity
        WHEN br.transaction_type IN ('出库','返库', '转出') THEN -br.quantity
        ELSE 0 END) AS 当前库存
        FROM
        bearing_records br
        JOIN
        bearings b ON br.box_text = b.box_text
        WHERE
            br.depository = #{depository} AND
            br.time &lt; DATE_ADD(#{EndDate},interval 1 DAY)
        GROUP BY
        b.pair, br.outer_inner_ring
        )
        SELECT
        b.pair,
        MAX(b.model) AS 型号,
        MAX(b.steel_type) AS 钢厂,
        MAX(b.customer) AS 客户,
        MAX(b.size) AS 材料尺寸,
        MAX(CASE WHEN pre_inv.outer_inner_ring = 'LA' THEN pre_inv.在库 ELSE 0 END) AS 前月末在库_LA,
        MAX(CASE WHEN pre_inv.outer_inner_ring = 'LB' THEN pre_inv.在库 ELSE 0 END) AS 前月末在库_LB,
        SUM(CASE WHEN ts.outer_inner_ring = 'LA' THEN ts.入库 ELSE 0 END) AS 入库_LA,
        SUM(CASE WHEN ts.outer_inner_ring = 'LB' THEN ts.入库 ELSE 0 END) AS 入库_LB,
        SUM(CASE WHEN ts.outer_inner_ring = 'LA' THEN ts.出库 ELSE 0 END) AS 出库_LA,
        SUM(CASE WHEN ts.outer_inner_ring = 'LB' THEN ts.出库 ELSE 0 END) AS 出库_LB,
        SUM(CASE WHEN ts.outer_inner_ring = 'LA' THEN ts.返库 ELSE 0 END) AS 返库_LA,
        SUM(CASE WHEN ts.outer_inner_ring = 'LB' THEN ts.返库 ELSE 0 END) AS 返库_LB,
        SUM(CASE WHEN ts.outer_inner_ring = 'LA' THEN ts.转入 ELSE 0 END) AS 转入_LA,
        SUM(CASE WHEN ts.outer_inner_ring = 'LB' THEN ts.转入 ELSE 0 END) AS 转入_LB,
        SUM(CASE WHEN ts.outer_inner_ring = 'LA' THEN ts.转出 ELSE 0 END) AS 转出_LA,
        SUM(CASE WHEN ts.outer_inner_ring = 'LB' THEN ts.转出 ELSE 0 END) AS 转出_LB,
        MAX(CASE WHEN inv.outer_inner_ring = 'LA' THEN inv.当前库存 ELSE 0 END) AS 当月在库_LA,
        MAX(CASE WHEN inv.outer_inner_ring = 'LB' THEN inv.当前库存 ELSE 0 END) AS 当月在库_LB
        FROM
        bearings b
        LEFT JOIN
        transaction_summary ts ON b.pair = ts.pair AND b.outer_inner_ring = ts.outer_inner_ring and b.model=ts.model
        LEFT JOIN
        inventory inv ON b.pair = inv.pair AND b.outer_inner_ring = inv.outer_inner_ring
        LEFT JOIN
        pre_start_date_inventory pre_inv ON b.pair = pre_inv.pair AND b.outer_inner_ring = pre_inv.outer_inner_ring
        WHERE b.depository = #{depository}
        GROUP BY
        b.pair
        ORDER BY
            MAX(b.size);
    </select>

</mapper>